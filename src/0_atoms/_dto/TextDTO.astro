---
import { storyblokEditable, type SbBlokData, type ISbRichtext, renderRichText } from '@storyblok/astro';
import type { StoryblokEditableData } from '../../storyblok/StoryblokEditableData';
import type { TextCenter, TextSize, TextMaxWidth } from '../../tailwind/types/Text';
import { textCenterGuard, textSizeGuard, textWidthGuard } from '../../tailwind/types/Text';
import type { MarginBottom } from '../../tailwind/types/Margin';
import { marginGuard } from '../../tailwind/types/Margin';
import Text from '../Text.astro';

export interface StoryblokTextDTO extends SbBlokData {
    component: 'paragraph';
    content: ISbRichtext;
    interactive?: boolean;
    type: any;
    margin_bottom?: any,
    font_size?: any,
    text_center?: any,
    max_width?: any,
}

const blokType = ['paragraph', 'paragraph-faded', 'link', 'text'] as const;
type BlokType = (typeof blokType)[number];
const isType = (x: any): x is BlokType => blokType.includes(x);

export interface StoryblokText extends StoryblokEditableData, TextSize, TextCenter, TextMaxWidth, MarginBottom {
    text: string;
    interactive: boolean;
    type: BlokType, 
}

interface Props {
    blok: StoryblokTextDTO;
}

const { blok } = Astro.props;

const text: StoryblokText = {
    text: renderRichText(blok.content),
    type: (isType(blok.type) ? blok.type : 'paragraph'),
    interactive: blok.interactive || false,
    storyblokData: storyblokEditable(blok),
    margin_bottom: marginGuard(blok.margin_bottom),
    font_size: textSizeGuard(blok.font_size),
    text_center: textCenterGuard(blok.text_center),
    max_width: textWidthGuard(blok.max_width),
};
---

<Text blok={text} />
