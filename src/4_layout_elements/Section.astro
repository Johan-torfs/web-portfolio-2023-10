---
import { getClassName, getPaddingXClasses, getPaddingYClasses, getMarginXClasses, getMarginYClasses, getAnimateOnScrollClasses } from '../tailwind/class_name_compiler';
import type { StoryblokSection } from './_dto/SectionDTO.astro';
import DefaultSection from './section/DefaultSection.astro';
import FooterSection from './section/FooterSection.astro';
import HeaderSection from './section/HeaderSection.astro';
import DivSection from './section/DivSection.astro';
import HeroSection from './section/HeroSection.astro';

interface Props {
    blok: StoryblokSection;
}

const { blok } = Astro.props;

const className = getClassName(blok, {
    decorators: [
        {decorator: getPaddingXClasses},
        {decorator: getPaddingYClasses},
        {decorator: getMarginXClasses},
        {decorator: getMarginYClasses},
        {decorator: getAnimateOnScrollClasses},
    ]
})
---

{blok.type == 'section' ?
    <DefaultSection blok={blok} className={className}>
        <slot />
    </DefaultSection>
: null}

{blok.type === 'footer' ?
    <FooterSection blok={blok} className={className}>
        <slot />
    </FooterSection>
: null}

{blok.type === 'header' ?
    <HeaderSection blok={blok} className={className}>
        <slot />
    </HeaderSection>
: null}

{blok.type === 'div' ?
    <DivSection blok={blok} className={className}>
        <slot />
    </DivSection>
: null}

{blok.type === 'hero' ?
    <HeroSection blok={blok} className={className}>
        <slot />
    </HeroSection>
: null}


<script>
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                entry.target.classList.add('transition-opacity');
                entry.target.classList.add('duration-1000');

                entry.target.classList.remove('opacity-0');
            } else {
                entry.target.classList.remove('transition-opacity');
                entry.target.classList.remove('duration-1000');
                entry.target.classList.remove('delay-1000');

                entry.target.classList.add('opacity-0');
            }
        })
    })

    function init() {
        const elements = document.querySelectorAll('.animate-on-scroll');
        elements.forEach((element) => {
            observer.observe(element);
        });
    }

    init();
    document.addEventListener('astro:after-swap', init);
</script>