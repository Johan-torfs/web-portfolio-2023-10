---
import { storyblokEditable, type SbBlokData } from '@storyblok/astro';
// @ts-ignore
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import type { StoryblokEditableData } from '../../storyblok/StoryblokEditableData';
import type { PaddingX, PaddingY } from '../../tailwind/types/Padding';
import { paddingGuard } from '../../tailwind/types/Padding';
import type { ColSpan } from '../../tailwind/types/Columns';
import { columnsGuard } from '../../tailwind/types/Columns';
import Column from '../Column.astro';

export interface StoryblokColumnDTO extends SbBlokData {
    component: 'container',
    content: SbBlokData[],
    type: any,
    padding_x?: any,
    padding_y?: any,
    col_span?: any,
}

const blokType = ['column'] as const;
type BlokType = (typeof blokType)[number];
const isType = (x: any): x is BlokType => blokType.includes(x);

export interface StoryblokColumn extends StoryblokEditableData, PaddingX, PaddingY, ColSpan {
    type: BlokType,
}

interface Props {
    blok: StoryblokColumnDTO;
}

const { blok } = Astro.props;

const grid: StoryblokColumn = {
    type: (isType(blok.size) ? blok.size : 'column'),
    storyblokData: storyblokEditable(blok),
    padding_x: paddingGuard(blok.padding_x),
    padding_y: paddingGuard(blok.padding_y),
    col_span: columnsGuard(blok.col_span),
};
---

<Column blok={grid}>
    {blok.content.map(item => {            
		return <StoryblokComponent blok={item} />
	})}
</Column>